/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, RepairSchedule as PrismaRepairSchedule } from "@prisma/client";

export class RepairScheduleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RepairScheduleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.repairSchedule.count(args);
  }

  async repairSchedules<T extends Prisma.RepairScheduleFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.RepairScheduleFindManyArgs>
  ): Promise<PrismaRepairSchedule[]> {
    return this.prisma.repairSchedule.findMany<Prisma.RepairScheduleFindManyArgs>(
      args
    );
  }
  async repairSchedule<T extends Prisma.RepairScheduleFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.RepairScheduleFindUniqueArgs>
  ): Promise<PrismaRepairSchedule | null> {
    return this.prisma.repairSchedule.findUnique(args);
  }
  async createRepairSchedule<T extends Prisma.RepairScheduleCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RepairScheduleCreateArgs>
  ): Promise<PrismaRepairSchedule> {
    return this.prisma.repairSchedule.create<T>(args);
  }
  async updateRepairSchedule<T extends Prisma.RepairScheduleUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.RepairScheduleUpdateArgs>
  ): Promise<PrismaRepairSchedule> {
    return this.prisma.repairSchedule.update<T>(args);
  }
  async deleteRepairSchedule<T extends Prisma.RepairScheduleDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.RepairScheduleDeleteArgs>
  ): Promise<PrismaRepairSchedule> {
    return this.prisma.repairSchedule.delete(args);
  }
}
